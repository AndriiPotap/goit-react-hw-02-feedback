{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","components/Container/Container.js","components/App.js","index.js"],"names":["module","exports","FeedbackOptions","this","props","options","onLeaveFeedback","className","s","btnList","map","option","type","feedbackBtn","onClick","Component","Statistics","good","neutral","bad","total","positivePercentage","item","Notification","message","notification","Section","title","children","section","Container","container","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","keys","Object","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,2B,iBCAzBD,EAAOC,QAAU,CAAC,YAAc,qCAAqC,QAAU,mC,gBCA/ED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,UAAY,+B,mKCGxBC,E,4JACJ,WACE,MAAqCC,KAAKC,MAAlCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBAEjB,OACE,mCACE,qBAAKC,UAAWC,IAAEC,QAAlB,SACGJ,EAAQK,KAAI,SAACC,GACZ,OACE,wBAEEC,KAAK,SACLL,UAAWC,IAAEK,YACbC,QAAS,kBAAMR,EAAgBK,IAJjC,SAMGA,GALIA,c,GAVSI,aA6Bfb,I,gBC7BTc,E,4JACJ,WACE,MAA0Db,KAAKC,MAAvDa,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBAEnC,OACE,qCACE,oBAAGd,UAAWC,IAAEc,KAAhB,mBAA6BL,KAC7B,oBAAGV,UAAWC,IAAEc,KAAhB,sBAAgCJ,KAChC,oBAAGX,UAAWC,IAAEc,KAAhB,kBAA4BH,KAC5B,oBAAGZ,UAAWC,IAAEc,KAAhB,oBAA8BF,KAC9B,oBAAGb,UAAWC,IAAEc,KAAhB,gCAA0CD,EAA1C,e,GAViBN,aAuBVC,I,iBCjBAO,EAPM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGjB,UAAWC,IAAEiB,aAAhB,SAA+BD,K,gBCYlBE,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASrB,UAAWC,IAAEqB,QAAtB,UACGF,GAAS,oBAAIpB,UAAWC,IAAEmB,MAAjB,SAAyBA,IAClCC,M,iBCDQE,MAJf,YAAkC,IAAbF,EAAY,EAAZA,SACnB,OAAO,qBAAKrB,UAAWC,IAAEuB,UAAlB,SAA8BH,KCIjCI,E,4MACJC,MAAQ,CACNhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPb,gBAAkB,SAACK,GACjB,EAAKuB,UAAS,SAACC,GAAD,sBACXxB,EAASwB,EAAUxB,GAAU,O,EAIlCyB,mBAAqB,kBACnB,EAAKH,MAAMhB,KAAO,EAAKgB,MAAMf,QAAU,EAAKe,MAAMd,K,EAEpDkB,gCAAkC,kBAChCC,KAAKC,MAAO,EAAKN,MAAMhB,KAAO,EAAKmB,qBAAwB,M,4CAE7D,WACE,MAA+BjC,KAAK8B,MAA5BhB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQjB,KAAKiC,qBACbf,EAAqBlB,KAAKkC,kCAE1BG,EAAOC,OAAOD,KAAKrC,KAAK8B,OAE9B,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASN,MAAM,wBAAf,SACE,cAAC,EAAD,CACEtB,QAASmC,EACTlC,gBAAiBH,KAAKG,oBAG1B,cAAC,EAAD,CAASqB,MAAM,aAAf,SACGP,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcG,QAAQ,+B,GA5ChBT,aAoDHiB,ICtDfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bb00fe68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__1pjgM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__1gw8B\",\"btnList\":\"FeedbackOptions_btnList__Tyfl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__AG0Xd\",\"title\":\"Section_title__bNbCU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__nPh1C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3nyBX\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { options, onLeaveFeedback } = this.props;\n\n    return (\n      <>\n        <div className={s.btnList}>\n          {options.map((option) => {\n            return (\n              <button\n                key={option}\n                type=\"button\"\n                className={s.feedbackBtn}\n                onClick={() => onLeaveFeedback(option)}\n              >\n                {option}\n              </button>\n            );\n          })}\n        </div>\n      </>\n    );\n  }\n}\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nclass Statistics extends Component {\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.props;\n\n    return (\n      <>\n        <p className={s.item}>Good: {good}</p>\n        <p className={s.item}>Neutral: {neutral}</p>\n        <p className={s.item}>Bad: {bad}</p>\n        <p className={s.item}>Total: {total}</p>\n        <p className={s.item}>Positive feedback: {positivePercentage} %</p>\n      </>\n    );\n  }\n}\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport s from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => (\n  <p className={s.notification}>{message}</p>\n);\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.object,\n};\n\nexport default Section;\n","import s from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Statistics/Statistics\";\nimport Notification from \"./Notification/Notification\";\nimport Section from \"./Section/Section\";\nimport Container from \"./Container/Container\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = (option) => {\n    this.setState((prevState) => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () =>\n    this.state.good + this.state.neutral + this.state.bad;\n\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good / this.countTotalFeedback()) * 100);\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    const keys = Object.keys(this.state);\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={keys}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}